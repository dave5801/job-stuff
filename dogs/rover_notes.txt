import unittest

def add(s):
    if s.startswith('//'):
        idx = s.find('\n')
        custom = s[len('//'):idx]
        print(custom)
        s = s[idx + 1:]
        print(s)
        s = s.replace(custom, ",").strip()
        print(s)

    #print(custom)
    
    if s == '':
        return 0
    
    tmp2 = s.replace("\n", ",").strip() 
    l = [x.strip() for x in tmp2.split(',')]
    count = 0
    for i in l:
        count += int(i)
    return count


class CalculatorTests(unittest.TestCase):
    def test_can_use_a_custom_delimiter(self):
        self.assertEqual(add('//*\n1*2*3*4'), 10)
        
    def test_can_use_newlines_as_delimiters(self):
        self.assertEqual(add('1,2\n3'), 6)
        
    def test_returns_the_sum_of_three_comma_delimited_numbers(self):
        self.assertEqual(add('3,4,5'), 12)
        
    def test_returns_the_sum_of_two_comma_delimited_numbers(self):
        self.assertEqual(add('1,2'), 3)
        
    def test_returns_the_integer_when_given_an_integer_string(self):
        self.assertEqual(add('23'), 23)

    def test_returns_zero_when_given_the_empty_string(self):
        self.assertEqual(add(''), 0)

        
unittest.main(exit=False)